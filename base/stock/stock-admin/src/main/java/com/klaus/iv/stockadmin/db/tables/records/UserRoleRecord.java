/*
 * This file is generated by jOOQ.
 */
package com.klaus.iv.stockadmin.db.tables.records;


import com.klaus.iv.stockadmin.db.tables.UserRole;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoleRecord extends UpdatableRecordImpl<UserRoleRecord> implements Record8<Long, Long, LocalDateTime, Integer, Long, LocalDateTime, Long, Long> {

    private static final long serialVersionUID = -205587958;

    /**
     * Setter for <code>guide.user_role.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>guide.user_role.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>guide.user_role.create_by</code>.
     */
    public void setCreateBy(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>guide.user_role.create_by</code>.
     */
    public Long getCreateBy() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>guide.user_role.create_dt</code>.
     */
    public void setCreateDt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>guide.user_role.create_dt</code>.
     */
    public LocalDateTime getCreateDt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>guide.user_role.is_delete</code>.
     */
    public void setIsDelete(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>guide.user_role.is_delete</code>.
     */
    public Integer getIsDelete() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>guide.user_role.update_by</code>.
     */
    public void setUpdateBy(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>guide.user_role.update_by</code>.
     */
    public Long getUpdateBy() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>guide.user_role.update_dt</code>.
     */
    public void setUpdateDt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>guide.user_role.update_dt</code>.
     */
    public LocalDateTime getUpdateDt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>guide.user_role.role_id</code>.
     */
    public void setRoleId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>guide.user_role.role_id</code>.
     */
    public Long getRoleId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>guide.user_role.user_id</code>.
     */
    public void setUserId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>guide.user_role.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, LocalDateTime, Integer, Long, LocalDateTime, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, LocalDateTime, Integer, Long, LocalDateTime, Long, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserRole.USER_ROLE.ID;
    }

    @Override
    public Field<Long> field2() {
        return UserRole.USER_ROLE.CREATE_BY;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return UserRole.USER_ROLE.CREATE_DT;
    }

    @Override
    public Field<Integer> field4() {
        return UserRole.USER_ROLE.IS_DELETE;
    }

    @Override
    public Field<Long> field5() {
        return UserRole.USER_ROLE.UPDATE_BY;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return UserRole.USER_ROLE.UPDATE_DT;
    }

    @Override
    public Field<Long> field7() {
        return UserRole.USER_ROLE.ROLE_ID;
    }

    @Override
    public Field<Long> field8() {
        return UserRole.USER_ROLE.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateDt();
    }

    @Override
    public Integer component4() {
        return getIsDelete();
    }

    @Override
    public Long component5() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdateDt();
    }

    @Override
    public Long component7() {
        return getRoleId();
    }

    @Override
    public Long component8() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateDt();
    }

    @Override
    public Integer value4() {
        return getIsDelete();
    }

    @Override
    public Long value5() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdateDt();
    }

    @Override
    public Long value7() {
        return getRoleId();
    }

    @Override
    public Long value8() {
        return getUserId();
    }

    @Override
    public UserRoleRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRoleRecord value2(Long value) {
        setCreateBy(value);
        return this;
    }

    @Override
    public UserRoleRecord value3(LocalDateTime value) {
        setCreateDt(value);
        return this;
    }

    @Override
    public UserRoleRecord value4(Integer value) {
        setIsDelete(value);
        return this;
    }

    @Override
    public UserRoleRecord value5(Long value) {
        setUpdateBy(value);
        return this;
    }

    @Override
    public UserRoleRecord value6(LocalDateTime value) {
        setUpdateDt(value);
        return this;
    }

    @Override
    public UserRoleRecord value7(Long value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UserRoleRecord value8(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserRoleRecord values(Long value1, Long value2, LocalDateTime value3, Integer value4, Long value5, LocalDateTime value6, Long value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRoleRecord
     */
    public UserRoleRecord() {
        super(UserRole.USER_ROLE);
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(Long id, Long createBy, LocalDateTime createDt, Integer isDelete, Long updateBy, LocalDateTime updateDt, Long roleId, Long userId) {
        super(UserRole.USER_ROLE);

        set(0, id);
        set(1, createBy);
        set(2, createDt);
        set(3, isDelete);
        set(4, updateBy);
        set(5, updateDt);
        set(6, roleId);
        set(7, userId);
    }
}
