/*
 * This file is generated by jOOQ.
 */
package com.klaus.iv.stockadmin.db.tables;


import com.klaus.iv.stockadmin.db.Guide;
import com.klaus.iv.stockadmin.db.Keys;
import com.klaus.iv.stockadmin.db.tables.records.YiStockRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class YiStock extends TableImpl<YiStockRecord> {

    private static final long serialVersionUID = -179004239;

    /**
     * The reference instance of <code>guide.yi_stock</code>
     */
    public static final YiStock YI_STOCK = new YiStock();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<YiStockRecord> getRecordType() {
        return YiStockRecord.class;
    }

    /**
     * The column <code>guide.yi_stock.id</code>.
     */
    public final TableField<YiStockRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>guide.yi_stock.create_by</code>.
     */
    public final TableField<YiStockRecord, Long> CREATE_BY = createField(DSL.name("create_by"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>guide.yi_stock.create_dt</code>.
     */
    public final TableField<YiStockRecord, LocalDateTime> CREATE_DT = createField(DSL.name("create_dt"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>guide.yi_stock.is_delete</code>.
     */
    public final TableField<YiStockRecord, Integer> IS_DELETE = createField(DSL.name("is_delete"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>guide.yi_stock.update_by</code>.
     */
    public final TableField<YiStockRecord, Long> UPDATE_BY = createField(DSL.name("update_by"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>guide.yi_stock.update_dt</code>.
     */
    public final TableField<YiStockRecord, LocalDateTime> UPDATE_DT = createField(DSL.name("update_dt"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>guide.yi_stock.code</code>.
     */
    public final TableField<YiStockRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>guide.yi_stock.name</code>.
     */
    public final TableField<YiStockRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>guide.yi_stock.stock_desc</code>.
     */
    public final TableField<YiStockRecord, String> STOCK_DESC = createField(DSL.name("stock_desc"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>guide.yi_stock</code> table reference
     */
    public YiStock() {
        this(DSL.name("yi_stock"), null);
    }

    /**
     * Create an aliased <code>guide.yi_stock</code> table reference
     */
    public YiStock(String alias) {
        this(DSL.name(alias), YI_STOCK);
    }

    /**
     * Create an aliased <code>guide.yi_stock</code> table reference
     */
    public YiStock(Name alias) {
        this(alias, YI_STOCK);
    }

    private YiStock(Name alias, Table<YiStockRecord> aliased) {
        this(alias, aliased, null);
    }

    private YiStock(Name alias, Table<YiStockRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> YiStock(Table<O> child, ForeignKey<O, YiStockRecord> key) {
        super(child, key, YI_STOCK);
    }

    @Override
    public Schema getSchema() {
        return Guide.GUIDE;
    }

    @Override
    public Identity<YiStockRecord, Long> getIdentity() {
        return Keys.IDENTITY_YI_STOCK;
    }

    @Override
    public UniqueKey<YiStockRecord> getPrimaryKey() {
        return Keys.KEY_YI_STOCK_PRIMARY;
    }

    @Override
    public List<UniqueKey<YiStockRecord>> getKeys() {
        return Arrays.<UniqueKey<YiStockRecord>>asList(Keys.KEY_YI_STOCK_PRIMARY);
    }

    @Override
    public YiStock as(String alias) {
        return new YiStock(DSL.name(alias), this);
    }

    @Override
    public YiStock as(Name alias) {
        return new YiStock(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public YiStock rename(String name) {
        return new YiStock(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public YiStock rename(Name name) {
        return new YiStock(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, LocalDateTime, Integer, Long, LocalDateTime, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
