/*
 * This file is generated by jOOQ.
 */
package com.klaus.iv.useradmin.db.tables;


import com.klaus.iv.useradmin.db.Keys;
import com.klaus.iv.useradmin.db.UserCenter;
import com.klaus.iv.useradmin.db.tables.records.UserExtRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserExt extends TableImpl<UserExtRecord> {

    private static final long serialVersionUID = -1940296249;

    /**
     * The reference instance of <code>user_center.user_ext</code>
     */
    public static final UserExt USER_EXT = new UserExt();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserExtRecord> getRecordType() {
        return UserExtRecord.class;
    }

    /**
     * The column <code>user_center.user_ext.id</code>.
     */
    public final TableField<UserExtRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>user_center.user_ext.create_by</code>.
     */
    public final TableField<UserExtRecord, Long> CREATE_BY = createField(DSL.name("create_by"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>user_center.user_ext.create_dt</code>.
     */
    public final TableField<UserExtRecord, LocalDateTime> CREATE_DT = createField(DSL.name("create_dt"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>user_center.user_ext.is_delete</code>.
     */
    public final TableField<UserExtRecord, Integer> IS_DELETE = createField(DSL.name("is_delete"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>user_center.user_ext.update_by</code>.
     */
    public final TableField<UserExtRecord, Long> UPDATE_BY = createField(DSL.name("update_by"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>user_center.user_ext.update_dt</code>.
     */
    public final TableField<UserExtRecord, LocalDateTime> UPDATE_DT = createField(DSL.name("update_dt"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>user_center.user_ext.email</code>.
     */
    public final TableField<UserExtRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>user_center.user_ext.mobile</code>.
     */
    public final TableField<UserExtRecord, String> MOBILE = createField(DSL.name("mobile"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>user_center.user_ext.openid</code>.
     */
    public final TableField<UserExtRecord, String> OPENID = createField(DSL.name("openid"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>user_center.user_ext.password</code>.
     */
    public final TableField<UserExtRecord, String> PASSWORD = createField(DSL.name("password"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>user_center.user_ext.username</code>.
     */
    public final TableField<UserExtRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>user_center.user_ext</code> table reference
     */
    public UserExt() {
        this(DSL.name("user_ext"), null);
    }

    /**
     * Create an aliased <code>user_center.user_ext</code> table reference
     */
    public UserExt(String alias) {
        this(DSL.name(alias), USER_EXT);
    }

    /**
     * Create an aliased <code>user_center.user_ext</code> table reference
     */
    public UserExt(Name alias) {
        this(alias, USER_EXT);
    }

    private UserExt(Name alias, Table<UserExtRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserExt(Name alias, Table<UserExtRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> UserExt(Table<O> child, ForeignKey<O, UserExtRecord> key) {
        super(child, key, USER_EXT);
    }

    @Override
    public Schema getSchema() {
        return UserCenter.USER_CENTER;
    }

    @Override
    public Identity<UserExtRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_EXT;
    }

    @Override
    public UniqueKey<UserExtRecord> getPrimaryKey() {
        return Keys.KEY_USER_EXT_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserExtRecord>> getKeys() {
        return Arrays.<UniqueKey<UserExtRecord>>asList(Keys.KEY_USER_EXT_PRIMARY);
    }

    @Override
    public UserExt as(String alias) {
        return new UserExt(DSL.name(alias), this);
    }

    @Override
    public UserExt as(Name alias) {
        return new UserExt(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserExt rename(String name) {
        return new UserExt(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserExt rename(Name name) {
        return new UserExt(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, LocalDateTime, Integer, Long, LocalDateTime, String, String, String, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
